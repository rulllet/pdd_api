package servicePdd

import (
	"math/rand"
)

const lenBlock = 200

//var block1 = [lenBlock]int64{1, 2, 3, 4, 5, 21, 22, 23, 24, 25, 41, 42, 43, 44, 45, 61, 62, 63, 64, 65, 81, 82, 83, 84, 85, 101, 102, 103, 104, 105, 121, 122, 123, 124, 125, 141, 142, 143, 144, 145, 161, 162, 163, 164, 165, 181, 182, 183, 184, 185, 201, 202, 203, 204, 205, 221, 222, 223, 224, 225, 241, 242, 243, 244, 245, 261, 262, 263, 264, 265, 281, 282, 283, 284, 285, 301, 302, 303, 304, 305, 321, 322, 323, 324, 325, 341, 342, 343, 344, 345, 361, 362, 363, 364, 365, 381, 382, 383, 384, 385, 401, 402, 403, 404, 405, 421, 422, 423, 424, 425, 441, 442, 443, 444, 445, 461, 462, 463, 464, 465, 481, 482, 483, 484, 485, 501, 502, 503, 504, 505, 521, 522, 523, 524, 525, 541, 542, 543, 544, 545, 561, 562, 563, 564, 565, 581, 582, 583, 584, 585, 601, 602, 603, 604, 605, 621, 622, 623, 624, 625, 641, 642, 643, 644, 645, 661, 662, 663, 664, 665, 681, 682, 683, 684, 685, 701, 702, 703, 704, 705, 721, 722, 723, 724, 725, 741, 742, 743, 744, 745, 761, 762, 763, 764, 765, 781, 782, 783, 784, 785}
//var block2 = [lenBlock]int64{6, 7, 8, 9, 10, 26, 27, 28, 29, 30, 46, 47, 48, 49, 50, 66, 67, 68, 69, 70, 86, 87, 88, 89, 90, 106, 107, 108, 109, 110, 126, 127, 128, 129, 130, 146, 147, 148, 149, 150, 166, 167, 168, 169, 170, 186, 187, 188, 189, 190, 206, 207, 208, 209, 210, 226, 227, 228, 229, 230, 246, 247, 248, 249, 250, 266, 267, 268, 269, 270, 286, 287, 288, 289, 290, 306, 307, 308, 309, 310, 326, 327, 328, 329, 330, 346, 347, 348, 349, 350, 366, 367, 368, 369, 370, 386, 387, 388, 389, 390, 406, 407, 408, 409, 410, 426, 427, 428, 429, 430, 446, 447, 448, 449, 450, 466, 467, 468, 469, 470, 486, 487, 488, 489, 490, 506, 507, 508, 509, 510, 526, 527, 528, 529, 530, 546, 547, 548, 549, 550, 566, 567, 568, 569, 570, 586, 587, 588, 589, 590, 606, 607, 608, 609, 610, 626, 627, 628, 629, 630, 646, 647, 648, 649, 650, 666, 667, 668, 669, 670, 686, 687, 688, 689, 690, 706, 707, 708, 709, 710, 726, 727, 728, 729, 730, 746, 747, 748, 749, 750, 766, 767, 768, 769, 770, 786, 787, 788, 789, 790}
//var block3 = [lenBlock]int64{11, 12, 13, 14, 15, 31, 32, 33, 34, 35, 51, 52, 53, 54, 55, 71, 72, 73, 74, 75, 91, 92, 93, 94, 95, 111, 112, 113, 114, 115, 131, 132, 133, 134, 135, 151, 152, 153, 154, 155, 171, 172, 173, 174, 175, 191, 192, 193, 194, 195, 211, 212, 213, 214, 215, 231, 232, 233, 234, 235, 251, 252, 253, 254, 255, 271, 272, 273, 274, 275, 291, 292, 293, 294, 295, 311, 312, 313, 314, 315, 331, 332, 333, 334, 335, 351, 352, 353, 354, 355, 371, 372, 373, 374, 375, 391, 392, 393, 394, 395, 411, 412, 413, 414, 415, 431, 432, 433, 434, 435, 451, 452, 453, 454, 455, 471, 472, 473, 474, 475, 491, 492, 493, 494, 495, 511, 512, 513, 514, 515, 531, 532, 533, 534, 535, 551, 552, 553, 554, 555, 571, 572, 573, 574, 575, 591, 592, 593, 594, 595, 611, 612, 613, 614, 615, 631, 632, 633, 634, 635, 651, 652, 653, 654, 655, 671, 672, 673, 674, 675, 691, 692, 693, 694, 695, 711, 712, 713, 714, 715, 731, 732, 733, 734, 735, 751, 752, 753, 754, 755, 771, 772, 773, 774, 775, 791, 792, 793, 794, 795}
//var block4 = [lenBlock]int64{16, 17, 18, 19, 20, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 76, 77, 78, 79, 80, 96, 97, 98, 99, 100, 116, 117, 118, 119, 120, 136, 137, 138, 139, 140, 156, 157, 158, 159, 160, 176, 177, 178, 179, 180, 196, 197, 198, 199, 200, 216, 217, 218, 219, 220, 236, 237, 238, 239, 240, 256, 257, 258, 259, 260, 276, 277, 278, 279, 280, 296, 297, 298, 299, 300, 316, 317, 318, 319, 320, 336, 337, 338, 339, 340, 356, 357, 358, 359, 360, 376, 377, 378, 379, 380, 396, 397, 398, 399, 400, 416, 417, 418, 419, 420, 436, 437, 438, 439, 440, 456, 457, 458, 459, 460, 476, 477, 478, 479, 480, 496, 497, 498, 499, 500, 516, 517, 518, 519, 520, 536, 537, 538, 539, 540, 556, 557, 558, 559, 560, 576, 577, 578, 579, 580, 596, 597, 598, 599, 600, 616, 617, 618, 619, 620, 636, 637, 638, 639, 640, 656, 657, 658, 659, 660, 676, 677, 678, 679, 680, 696, 697, 698, 699, 700, 716, 717, 718, 719, 720, 736, 737, 738, 739, 740, 756, 757, 758, 759, 760, 776, 777, 778, 779, 780, 796, 797, 798, 799, 800}

const (
	ticket            = iota
	addition_question = iota
	result            = iota
)

type DataTicket struct {
	Mode          int64   `json:"mode"`
	Ticket        int64   `json:"ticket"`
	Question      int64   `json:"question"`
	Answer        int64   `json:"answer"`
	CorrectAnswer int64   `json:"correct_answer"`
	BlockBad      []int64 `json:"block_bad"`
	BlockAdd      []int64 `json:"block_add"`
	AdditionQues  []int64 `json:"addition_ques"`
}

func _modB(res *DataTicket) {
	if res.AdditionQues == nil {
		res.Mode = result
	} else {
		lenlistQ := len(res.AdditionQues)
		res.Ticket = res.AdditionQues[lenlistQ-1]/20 + 1
		res.Question = res.AdditionQues[lenlistQ-1] - (res.Ticket-1)*20
		res.AdditionQues = res.AdditionQues[:lenlistQ-1]

	}
}

func NextQuestion(res DataTicket) DataTicket {
	if res.Mode == ticket {
		if res.Answer != res.CorrectAnswer {
			res.BlockBad = append(res.BlockBad, (res.Ticket*20 + res.Question))
			randomIndex := rand.Intn(lenBlock)
			switch res.Question {
			case 1, 2, 3, 4, 5:
				res.AdditionQues = append(res.AdditionQues, block1[randomIndex])
			case 6, 7, 8, 9, 10:
				res.AdditionQues = append(res.AdditionQues, block2[randomIndex])
			case 11, 12, 13, 14, 15:
				res.AdditionQues = append(res.AdditionQues, block3[randomIndex])
			case 16, 17, 18, 19, 20:
				res.AdditionQues = append(res.AdditionQues, block4[randomIndex])
			}
		}
		if res.Question < 20 {
			res.Question += 1
		} else if res.Question == 20 {
			res.Mode = addition_question
			_modB(&res)
		}
	} else if res.Mode == addition_question {
		if res.Answer != res.CorrectAnswer {
			res.BlockBad = append(res.BlockAdd, (res.Ticket*20 + res.Question))
		}
		_modB(&res)
	}
	return res
}

// func Test() ResultQuestion {
// 	return ResultQuestion{Mode: 0, Ticket: 1, Question: 13, Answer: 2, CorrectAnswer: 1, BlockBad: nil, BlockAdd: nil, AdditionQues: nil}
// }
